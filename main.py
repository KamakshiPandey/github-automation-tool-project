from github_api import create_pull_request, merge_pull_request, branch_exists, create_branch
from notifier import notify_slack, notify_discord

def main():
    try:
        branch_name = "feature-branch"   # Branch to create PR from
        base_branch = "main"             # Base branch to merge into

        # Step 0: Ensure branch exists
        if not branch_exists(branch_name):
            print(f"Branch '{branch_name}' does not exist. Creating from '{base_branch}'...")
            create_branch(branch_name, base_branch)
            notify_slack(f"🟢 Branch '{branch_name}' created from '{base_branch}'")
            notify_discord(f"🟢 Branch '{branch_name}' created from '{base_branch}'")

        # Step 1: Create PR
        pr = create_pull_request(branch_name, base=base_branch, title="Automated PR", body="Generated by script")
        pr_number = pr["number"]
        notify_slack(f"✅ PR #{pr_number} created: {pr['html_url']}")
        notify_discord(f"✅ PR #{pr_number} created: {pr['html_url']}")
        print(f"PR #{pr_number} created successfully.")

        # Step 2: Merge PR automatically
        merged = merge_pull_request(pr_number)
        notify_slack(f"🎉 PR #{pr_number} merged successfully!")
        notify_discord(f"🎉 PR #{pr_number} merged successfully!")
        print(f"PR #{pr_number} merged successfully.")

    except Exception as e:
        notify_slack(f"❌ Automation failed: {e}")
        notify_discord(f"❌ Automation failed: {e}")
        print(f"Error: {e}")

if __name__ == "__main__":
    main()
